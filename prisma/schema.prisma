// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider = "mysql"
//   url      = env("DATABASE_URL")
// }

// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  password  String
  status    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ArticleType {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  categories Category[]
  Article    Article[]
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String
  typeId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  type     ArticleType @relation(fields: [typeId], references: [id], onDelete: Cascade)
  articles Article[]
}

model Article {
  id          Int      @id @default(autoincrement())
  date        DateTime @default(now())
  amount      Float
  description String?
  userId      Int
  categoryId  Int
  typeId      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  category Category    @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  type     ArticleType @relation(fields: [typeId], references: [id], onDelete: Cascade)
}
